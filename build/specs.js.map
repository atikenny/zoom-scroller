{"version":3,"sources":["webpack:///specs.js","webpack:///webpack/bootstrap 3c925c35372c4070ad2e","webpack:///./lib/body-inliner.js","webpack:///./lib/canvas-helpers.js","webpack:///./lib/dom-helpers.js","webpack:///./lib/body-inliner.test.js","webpack:///./lib/canvas-helpers.test.js","webpack:///./lib/dom-helpers.test.js","webpack:///./specs.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","__webpack_exports__","bodyInlinerFactory","inlineElementStyles","getElementClone","getBlob","window","cache","appendClone","parentClone","parentElement","style","display","appendChild","replaceBodyWithDiv","outerHTML","replace","getHTML","fullPageHTML","remove","addHTMLToSvg","inlinedHTML","svgContainer","getSvgUrl","domUrl","svg","type","createObjectURL","getCachedSvgUrl","URL","webkitURL","cachedValue","innerHTML","svgUrl","canvasHelpersFactory","getImage","clearCanvas","canvas","context","getContext","clearRect","width","height","drawSvgToCanvas","callback","image","onload","drawImage","onerror","Error","src","drawSvgToCanvasAsync","Promise","bind","drawWhereYouAtWindow","rectStartY","scrollTop","rectWidth","clientWidth","rectHeight","clientHeight","globalCompositeOperation","fillStyle","fillRect","domHelpersFactory","convertNodeListToArray","document","addStyleToElement","element","styles","keys","forEach","propertyName","appendElement","tagName","elementStyles","childElement","createElement","fadeInElement","visibility","opacity","visualStyleProperties","notVisualTags","isNotVisualTag","indexOf","toLowerCase","computedStyle","getComputedStyle","elementVisualStyleProperties","map","propertyValue","getPropertyValue","cssText","join","children","isDeepClone","cloneNode","__WEBPACK_IMPORTED_MODULE_0__body_inliner__","describe","mockParentElement","jasmine","createSpyObj","mockWindow","mockGetBlob","createSpy","mockInlineElementStyle","mockGetElementClone","mockObjectUrl","mockSvgBlob","and","callFake","returnValue","initSUT","fillSvgContainer","content","callMethod","SUT","it","expect","toEqual","any","Function","toHaveBeenCalledWith","calls","reset","toHaveBeenCalled","not","__WEBPACK_IMPORTED_MODULE_0__canvas_helpers__","mockCanvas","mockCanvasWidth","mockCanvasHeight","mockContext","mockImage","mockGetImage","mockCachedSvgUrl","mockGetCachedSvgUrl","mockCallback","toThrow","__WEBPACK_IMPORTED_MODULE_0__dom_helpers__","mockElementStyles","property1","property2","property3","property4","mockStylesToInline","background-color","color","margin","padding","dont-care","mockConvertNodeListToArray","nodeList","mockDocument","targetElement","checkElementStyles","appendedElement","mockElementChild1","mockElementChild2","mockElement","expectedCssText","filter"],"mappings":"CAAS,SAAUA,GCInB,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAE,OAGA,IAAAC,GAAAF,EAAAD,IACAI,EAAAJ,EACAK,GAAA,EACAH,WAUA,OANAJ,GAAAE,GAAAM,KAAAH,EAAAD,QAAAC,IAAAD,QAAAH,GAGAI,EAAAE,GAAA,EAGAF,EAAAD,QAvBA,GAAAD,KA+DA,OAnCAF,GAAAQ,EAAAT,EAGAC,EAAAS,EAAAP,EAGAF,EAAAK,EAAA,SAAAK,GAA2C,MAAAA,IAG3CV,EAAAW,EAAA,SAAAR,EAAAS,EAAAC,GACAb,EAAAc,EAAAX,EAAAS,IACAG,OAAAC,eAAAb,EAAAS,GACAK,cAAA,EACAC,YAAA,EACAC,IAAAN,KAMAb,EAAAoB,EAAA,SAAAhB,GACA,GAAAS,GAAAT,KAAAiB,WACA,WAA2B,MAAAjB,GAAA,SAC3B,WAAiC,MAAAA,GAEjC,OADAJ,GAAAW,EAAAE,EAAA,IAAAA,GACAA,GAIAb,EAAAc,EAAA,SAAAQ,EAAAC,GAAsD,MAAAR,QAAAS,UAAAC,eAAAlB,KAAAe,EAAAC,IAGtDvB,EAAA0B,EAAA,GAGA1B,IAAA2B,EAAA,KDMM,SAAUvB,EAAQwB,EAAqB5B,GAE7C,YExEAA,GAAAW,EAAAiB,EAAA,qBAAAC,IAAA,IAAMA,GAAqB,SAACC,EAAqBC,EAAiBC,EAASC,GACvE,GAAMC,MAEAC,EAAc,SAACC,EAAaC,GAC9BD,EAAYE,MAAMC,QAAU,OAC5BF,EAAcG,YAAYJ,IAGxBK,EAAqB,SAACL,GACxB,MAAOA,GAAYM,UACdC,QAAQ,QAAS,QACjBA,QAAQ,SAAU,UAGrBC,EAAU,SAACP,GACb,GAAMD,GAAcL,EAAgBM,EAEpCF,GAAYC,EAAaC,GACzBP,EAAoBM,EAEpB,IAAMS,GAAeJ,EAAmBL,EAIxC,OAFAA,GAAYU,SAELD,GAGLE,EAAe,SAACC,GAClB,GAAMC,GAAe,6LAErB,OAAOA,GAAaN,QAAQ,WAAYK,IAGtCE,EAAY,SAACC,EAAQd,GACvB,GAAMW,GAAcJ,EAAQP,GAEtBe,EAAMpB,GAASe,EAAaC,KAAiBK,KAAM,iBAEzD,OAAOF,GAAOG,gBAAgBF,IAG5BG,EAAkB,SAAClB,GACrB,GAAMc,GAASlB,EAAOuB,KAAOvB,EAAOwB,WAAaxB,EAE7CyB,EAAcxB,EAAMG,EAAcsB,UAEtC,IAAID,EACA,MAAOA,EAGX,IAAME,GAASV,EAAUC,EAAQd,EAIjC,OAFAH,GAAMG,EAAcsB,WAAaC,EAE1BA,EAGX,QACIL,qBFgFF,SAAUnD,EAAQwB,EAAqB5B,GAE7C,YG5IAA,GAAAW,EAAAiB,EAAA,qBAAAiC,IAAA,IAAMA,GAAuB,SAACC,GAC1B,GAAMC,GAAc,SAACC,GACjB,GAAMC,GAAUD,EAAOE,WAAW,KAElCD,GAAQE,UAAU,EAAG,EAAGH,EAAOI,MAAOJ,EAAOK,SAG3CC,EAAkB,SAACf,EAAiBS,EAAQ3B,EAAekC,GAC7D,GAAMC,GAAQV,IACRF,EAASL,EAAgBlB,GACzB4B,EAAUD,EAAOE,WAAW,KAElCM,GAAMC,OAAS,WACXV,EAAYC,GACZC,EAAQS,UAAUF,EAAO,EAAG,GAE5BD,KAGJC,EAAMG,QAAU,WACZ,KAAM,IAAIC,OAAM,0BAGpBJ,EAAMK,IAAMjB,GAGVkB,EAAuB,SAACvB,EAAiBS,EAAQ3B,GACnD,MAAO,IAAI0C,SAAQT,EAAgBU,KAAK,KAAMzB,EAAiBS,EAAQ3B,KAGrE4C,EAAuB,SAAC5C,EAAe2B,GACzC,GAAMC,GAAUD,EAAOE,WAAW,MAC5BgB,EAAa7C,EAAc8C,UAC3BC,EAAY/C,EAAcgD,YAC1BC,EAAajD,EAAckD,YAEjCtB,GAAQuB,yBAA2B,SACnCvB,EAAQwB,UAAY,OACpBxB,EAAQyB,SAAS,EAAGR,EAAYE,EAAWE,GAG/C,QACIhB,kBACAQ,uBACAG,0BHsJF,SAAU7E,EAAQwB,EAAqB5B,GAE7C,YIpMAA,GAAAW,EAAAiB,EAAA,qBAAA+D,IAAA,IAAMA,GAAoB,SAACC,EAAwB3D,EAAQ4D,GACvD,GAAMC,GAAoB,SAACC,EAASC,GAChCjF,OAAOkF,KAAKD,GAAQE,QAAQ,SAAAC,GACxBJ,EAAQzD,MAAM6D,GAAgBH,EAAOG,MAIvCC,EAAgB,SAAC/D,EAAegE,EAASC,GAC3C,GAAMC,GAAeV,EAASW,cAAcH,EAQ5C,OANIC,IACAR,EAAkBS,EAAcD,GAGpCjE,EAAcG,YAAY+D,GAEnBA,GAGLE,EAAgB,SAACV,GACnBD,EAAkBC,GACdW,WAAY,UACZC,QAAS,KAIXC,GAAyB,mBAAoB,QAAS,SAAU,WAChEC,GAAiB,SAAU,SAAU,SACrCC,EAAiB,SAACT,GAAD,MAAaQ,GAAcE,QAAQV,EAAQW,kBAAmB,GAE/ElF,EAAsB,SAACiE,GACzB,IAAIe,EAAef,EAAQM,SAA3B,CAIA,GAAMY,GAAgBhF,EAAOiF,iBAAiBnB,GAExCoB,EAA+BP,EAAsBQ,IAAI,SAAAjB,GAC3D,GAAMkB,GAAgBJ,EAAcK,iBAAiBnB,EAErD,OAAUA,GAAV,IAA0BkB,GAG9BtB,GAAQzD,MAAMiF,QAAUJ,EAA6BK,KAAK,KAE1D5B,EAAuBG,EAAQ0B,UAAUvB,QAAQpE,KAG/CC,EAAkB,SAACgE,GACrB,GAAM2B,IAAc,CAEpB,OAAO3B,GAAQ4B,UAAUD,GAG7B,QACI5B,oBACAM,gBACAK,gBACA3E,sBACAC,qBJgNF,SAAU3B,EAAQwB,EAAqB5B,GAE7C,YACqB,IAAI4H,GAA8C5H,EAAoB,EK1Q3F6H,UAAS,sBAAuB,WAC5B,GAAMC,GAA4BC,QAAQC,aAAa,qBAAsB,YAAa,cAAe,WACnGC,EAA4BF,QAAQC,aAAa,cAAe,oBAChEE,EAA4BH,QAAQI,UAAU,eAC9CC,EAA4BL,QAAQI,UAAU,0BAC9CE,EAA4BN,QAAQI,UAAU,uBAC9CG,EAAgB,gBAChBC,EAAc,aAEpBT,GAAkBxF,SAClBwF,EAAkBpF,UAAY,8BAC9BoF,EAAkBnE,UAAY,iBAC9B0E,EAAoBG,IAAIC,SAAS,SAAA1C,GAAA,MAAWA,KAC5CqC,EAAuBI,IAAIC,SAAS,SAAA1C,GAGhC,MAFAA,GAAQrD,UAAY,2BAEbqD,IAEXkC,EAAW3E,gBAAgBkF,IAAIE,YAAYJ,GAC3CJ,EAAYM,IAAIE,YAAYH,EAE5B,IAAMI,GAAU,iBAAM3I,GAAAK,EAAAuH,EAAA,GAAmBQ,EAAwBC,EAAqBH,EAAaD,GAEnGJ,UAAS,oBAAqB,WAC1B,GAAM5E,GAAe,8LACf2F,EAAmB,SAACC,GAAD,MAAa5F,GAAaN,QAAQ,WAAYkG,IACjEC,EAAa,WACf,GAAMC,GAAMJ,GAIZ,OAFAI,GAAIxF,gBAAgBuE,GAEbiB,EAGXC,IAAG,oBAAqB,WACpBC,OAAON,IAAUpF,iBAAiB2F,QAAQnB,QAAQoB,IAAIC,aAG1DJ,GAAG,sBAAuB,WACtB,GAAMhG,GAAc,wBAEpB8F,KAEAG,OAAOf,GAAamB,sBAAsBT,EAAiB5F,KAAiBK,KAAM,oBAGtF2F,GAAG,8BAA+B,WAC9Bf,EAAW3E,gBAAgBgG,MAAMC,QAEjCT,IAEAG,OAAOhB,EAAW3E,iBAAiB+F,qBAAqBd,KAG5DS,GAAG,sBAAuB,WACtBlB,EAAkBhF,OAAOwG,MAAMC,QAE/BT,IAEAG,OAAOnB,EAAkBhF,QAAQ0G,qBAGrCR,GAAG,0BAA2B,WAC1BZ,EAAuBkB,MAAMC,OAE7B,IAAMR,GAAMD,GAEZG,QAAOb,GAAwBoB,mBAE/BpB,EAAuBkB,MAAMC,QAE7BR,EAAIxF,gBAAgBuE,GAEpBmB,OAAOb,GAAwBqB,IAAID,0BL0RzC,SAAUpJ,EAAQwB,EAAqB5B,GAE7C,YACqB,IAAI0J,GAAgD1J,EAAoB,EMtW7F6H,UAAS,wBAAyB,WAC9B,GAAM8B,GAAa5B,QAAQC,aAAa,cAAe,eACjD4B,EAAkB,kBAClBC,EAAmB,mBACnBC,GACFpE,SAAUqC,QAAQI,UAAU,YAC5BzD,UAAWqD,QAAQI,UAAU,aAC7BhE,UAAW4D,QAAQI,UAAU,cAE3B4B,KACAC,EAAe,iBAAMD,IACrBE,EAAmB,mBACnBC,EAAsBnC,QAAQI,UAAU,uBACxCgC,EAAepC,QAAQI,UAAU,gBACjCL,GACF3C,UAAW,YACXE,YAAa,cACbE,aAAc,eAGlB2E,GAAoB1B,IAAIE,YAAYuB,GACpCN,EAAWvF,MAAQwF,EACnBD,EAAWtF,OAASwF,EACpBF,EAAWzF,WAAWsE,IAAIE,YAAYoB,EAEtC,IAAMnB,GAAU,iBAAM3I,GAAAK,EAAAqJ,EAAA,GAAqBM,GAE3CnC,UAAS,yBAA0B,WAC/BmB,GAAG,oBAAqB,WACpBC,OAAON,IAAU7D,sBAAsBoE,QAAQnB,QAAQoB,IAAIC,aAG/DJ,GAAG,0BAA2B,WAC1BC,OAAON,IAAU7D,qBAAqBoF,EAAqBP,EAAY7B,IAAoBoB,QAAQnB,QAAQoB,IAAIpE,cAIvH8C,SAAS,oBAAqB,WAC1B,GAAMiB,GAAa,WACfH,IAAUrE,gBAAgB4F,EAAqBP,EAAY7B,EAAmBqC,GAGlFnB,IAAG,8BAA+B,WAC9BF,IAEAG,OAAOiB,GAAqBb,qBAAqBvB,KAGrDkB,GAAG,8BAA+B,WAC9BF,IAEAG,OAAOc,EAAUlF,KAAKqE,QAAQe,KAGlCjB,GAAG,2BAA4B,WAC3BF,IAGAiB,EAAUtF,SAGVwE,OAAOa,EAAY3F,WAAWkF,qBAAqB,EAAG,EAAGO,EAAiBC,GAC1EZ,OAAOa,EAAYpF,WAAW2E,qBAAqBU,EAAW,EAAG,GACjEd,OAAOkB,GAAcX,qBAGzBR,GAAG,4BAA6B,WAC5BF,IAEAG,OAAOc,EAAUpF,SAASyF,QAAQ,GAAIxF,OAAM,8BAIpDiD,SAAS,yBAA0B,WAC/BmB,GAAG,oBAAqB,WACpBC,OAAON,IAAU1D,sBAAsBiE,QAAQnB,QAAQoB,IAAIC,aAG/DJ,GAAG,4CAA6C,WAE5CL,IAAU1D,qBAAqB6C,EAAmB6B,GAGlDV,OAAOa,EAAYtE,0BAA0B0D,QAAQ,UACrDD,OAAOa,EAAYrE,WAAWyD,QAAQ,QACtCD,OAAOa,EAAYpE,UAAU2D,qBACzB,EACAvB,EAAkB3C,UAClB2C,EAAkBzC,YAClByC,EAAkBvC,qBNgX5B,SAAUnF,EAAQwB,EAAqB5B,GAE7C,YACqB,IAAIqK,GAA6CrK,EAAoB,GO5cpFsK,GACFC,UAAW,YACXC,UAAW,YACXC,UAAW,YACXC,UAAW,aAGTC,GACFC,mBAAoB,mBACpBC,MAAS,QACTC,OAAU,SACVC,QAAW,UACXC,YAAa,YAGjBnD,UAAS,qBAAsB,WAC3B,GAAMoD,GAA6B,SAACC,GAAD,MAAcA,IAC3CjD,EAAaF,QAAQC,aAAa,cAAe,qBACjDmD,EAAepD,QAAQC,aAAa,YAAa,iBAEvDC,GAAWf,iBAAiBsB,IAAIE,aAC5BpB,iBAAkB,SAACnB,GAAD,MAAkBwE,GAAmBxE,MAE3DgF,EAAa3E,cAAcgC,IAAIE,aAC3BpG,UAGJ,IAAMqG,GAAU,iBAAM3I,GAAAK,EAAAgK,EAAA,GAAkBY,EAA4BhD,EAAYkD,GAEhFtD,UAAS,sBAAuB,WAC5BmB,GAAG,oBAAqB,WACpBC,OAAON,IAAU7C,mBAAmBoD,QAAQnB,QAAQoB,IAAIC,aAG5DJ,GAAG,kCAAmC,WAClC,GAAIoC,IACA9I,SAGJqG,KAAU7C,kBAAkBsF,EAAed,GAE3Ce,EAAmBD,EAAed,OAI1CzC,SAAS,kBAAmB,WACxBmB,GAAG,oBAAqB,WACpBC,OAAON,IAAUvC,eAAe8C,QAAQnB,QAAQoB,IAAIC,aAGxDJ,GAAG,oDAAqD,WAEpD,GAAMlB,IACFtF,YAAauF,QAAQI,UAAU,gBAE7BmC,KAGAgB,EAAkB3C,IAAUvC,cAAc0B,EAAmB,UAAWwC,EAG9ErB,QAAOkC,EAAa3E,eAAe6C,qBAAqB,WACxDJ,OAAOnB,EAAkBtF,aAAa6G,qBAAqBiC,GAC3DD,EAAmBC,EAAiBhB,OAI5CzC,SAAS,kBAAmB,WACxBmB,GAAG,oBAAqB,WACpBC,OAAON,IAAUlC,eAAeyC,QAAQnB,QAAQoB,IAAIC,aAGxDJ,GAAG,2CAA4C,WAC3C,GAAIoC,IACA9I,SAGJqG,KAAUlC,cAAc2E,GAExBnC,OAAOmC,EAAc9I,MAAMoE,YAAYwC,QAAQ,WAC/CD,OAAOmC,EAAc9I,MAAMqE,SAASuC,QAAQ,OAIpDrB,SAAS,wBAAyB,WAC9B,GAAM0D,IACFlF,QAAS,GACT/D,SACAmF,aAEE+D,GACFnF,QAAS,GACT/D,SACAmF,aAEEgE,GACFpF,QAAS,GACT/D,SACAmF,UAAW8D,EAAmBC,IAE5BE,EAAkB3K,OAAOkF,KAAK0E,GAC/BgB,OAAO,SAAAxF,GAAA,MAAiC,cAAjBA,IACvBiB,IAAI,SAAAjB,GAAA,MAAmBA,GAAnB,IAAmCwE,EAAmBxE,KAC1DqB,KAAK,IAEVwB,IAAG,gCAAiC,WAChCL,IAAU7G,oBAAoB2J,GAE9BxC,OAAOwC,EAAYnJ,MAAMiF,SAAS2B,QAAQwC,GAC1CzC,OAAOwC,EAAYhE,SAAS,GAAGnF,MAAMiF,SAAS2B,QAAQwC,GACtDzC,OAAOwC,EAAYhE,SAAS,GAAGnF,MAAMiF,SAAS2B,QAAQwC,OAI9D7D,SAAS,oBAAqB,WAC1BmB,GAAG,mCAAoC,WACnC,GAAMyC,GAAc1D,QAAQC,aAAa,eAAgB,aAEzDW,KAAU5G,gBAAgB0J,GAE1BxC,OAAOwC,EAAY9D,WAAW0B,sBAAqB,QAK/D,IAAMgC,GAAqB,SAACtF,EAASC,GACjCjF,OAAOkF,KAAKD,GAAQE,QAAQ,SAAAC,GACxB8C,OAAOlD,EAAQzD,MAAM6D,IAAe+C,QAAQlD,EAAOG,QP4drD,SAAU/F,EAAQwB,EAAqB5B,GAE7C,YACAe,QAAOC,eAAeY,EAAqB,cAAgBlB,OAAO,GACcV,GAAoB,GAClBA,EAAoB,GQpmBtGA,EAAA","file":"specs.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 6);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return bodyInlinerFactory; });\nvar bodyInlinerFactory = function (inlineElementStyles, getElementClone, getBlob, window) {\n    var cache = {};\n\n    var appendClone = function (parentClone, parentElement) {\n        parentClone.style.display = 'none';\n        parentElement.appendChild(parentClone);\n    };\n\n    var replaceBodyWithDiv = function (parentClone) {\n        return parentClone.outerHTML.replace('<body', '<div').replace('</body', '</div');\n    };\n\n    var getHTML = function (parentElement) {\n        var parentClone = getElementClone(parentElement);\n\n        appendClone(parentClone, parentElement); // we need to append the clone for styles to take effect\n        inlineElementStyles(parentClone); // inline styles so the scroller gets them as well\n\n        var fullPageHTML = replaceBodyWithDiv(parentClone);\n\n        parentClone.remove();\n\n        return fullPageHTML;\n    };\n\n    var addHTMLToSvg = function (inlinedHTML) {\n        var svgContainer = '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"100%\" height=\"100%\"><foreignObject width=\"100%\" height=\"100%\"><div xmlns=\"http://www.w3.org/1999/xhtml\">{{html}}</div></foreignObject></svg>';\n\n        return svgContainer.replace('{{html}}', inlinedHTML);\n    };\n\n    var getSvgUrl = function (domUrl, parentElement) {\n        var inlinedHTML = getHTML(parentElement);\n\n        var svg = getBlob([addHTMLToSvg(inlinedHTML)], { type: 'image/svg+xml' });\n\n        return domUrl.createObjectURL(svg);\n    };\n\n    var getCachedSvgUrl = function (parentElement) {\n        var domUrl = window.URL || window.webkitURL || window;\n\n        var cachedValue = cache[parentElement.innerHTML];\n\n        if (cachedValue) {\n            return cachedValue;\n        }\n\n        var svgUrl = getSvgUrl(domUrl, parentElement);\n\n        cache[parentElement.innerHTML] = svgUrl;\n\n        return svgUrl;\n    };\n\n    return {\n        getCachedSvgUrl: getCachedSvgUrl\n    };\n};\n\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return canvasHelpersFactory; });\nvar canvasHelpersFactory = function (getImage) {\n    var clearCanvas = function (canvas) {\n        var context = canvas.getContext('2d');\n\n        context.clearRect(0, 0, canvas.width, canvas.height);\n    };\n\n    var drawSvgToCanvas = function (getCachedSvgUrl, canvas, parentElement, callback) {\n        var image = getImage();\n        var svgUrl = getCachedSvgUrl(parentElement);\n        var context = canvas.getContext('2d');\n\n        image.onload = function () {\n            clearCanvas(canvas);\n            context.drawImage(image, 0, 0);\n\n            callback();\n        };\n\n        image.onerror = function () {\n            throw new Error('Could not load image!');\n        };\n\n        image.src = svgUrl;\n    };\n\n    var drawSvgToCanvasAsync = function (getCachedSvgUrl, canvas, parentElement) {\n        return new Promise(drawSvgToCanvas.bind(null, getCachedSvgUrl, canvas, parentElement));\n    };\n\n    var drawWhereYouAtWindow = function (parentElement, canvas) {\n        var context = canvas.getContext('2d');\n        var rectStartY = parentElement.scrollTop;\n        var rectWidth = parentElement.clientWidth;\n        var rectHeight = parentElement.clientHeight;\n\n        context.globalCompositeOperation = 'darken';\n        context.fillStyle = 'grey';\n        context.fillRect(0, rectStartY, rectWidth, rectHeight);\n    };\n\n    return {\n        drawSvgToCanvas: drawSvgToCanvas,\n        drawSvgToCanvasAsync: drawSvgToCanvasAsync,\n        drawWhereYouAtWindow: drawWhereYouAtWindow\n    };\n};\n\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return domHelpersFactory; });\nvar domHelpersFactory = function (convertNodeListToArray, window, document) {\n    var addStyleToElement = function (element, styles) {\n        Object.keys(styles).forEach(function (propertyName) {\n            element.style[propertyName] = styles[propertyName];\n        });\n    };\n\n    var appendElement = function (parentElement, tagName, elementStyles) {\n        var childElement = document.createElement(tagName);\n\n        if (elementStyles) {\n            addStyleToElement(childElement, elementStyles);\n        }\n\n        parentElement.appendChild(childElement);\n\n        return childElement;\n    };\n\n    var fadeInElement = function (element) {\n        addStyleToElement(element, {\n            visibility: 'visible',\n            opacity: 1\n        });\n    };\n\n    var visualStyleProperties = ['background-color', 'color', 'margin', 'padding'];\n    var notVisualTags = ['script', 'iframe', 'style'];\n    var isNotVisualTag = function (tagName) {\n        return notVisualTags.indexOf(tagName.toLowerCase()) !== -1;\n    };\n\n    var inlineElementStyles = function (element) {\n        if (isNotVisualTag(element.tagName)) {\n            return;\n        }\n\n        var computedStyle = window.getComputedStyle(element);\n\n        var elementVisualStyleProperties = visualStyleProperties.map(function (propertyName) {\n            var propertyValue = computedStyle.getPropertyValue(propertyName);\n\n            return propertyName + ':' + propertyValue;\n        });\n\n        element.style.cssText = elementVisualStyleProperties.join(';');\n\n        convertNodeListToArray(element.children).forEach(inlineElementStyles);\n    };\n\n    var getElementClone = function (element) {\n        var isDeepClone = true;\n\n        return element.cloneNode(isDeepClone);\n    };\n\n    return {\n        addStyleToElement: addStyleToElement,\n        appendElement: appendElement,\n        fadeInElement: fadeInElement,\n        inlineElementStyles: inlineElementStyles,\n        getElementClone: getElementClone\n    };\n};\n\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__body_inliner__ = __webpack_require__(0);\n\n\ndescribe('body-inliner module', function () {\n    var mockParentElement = jasmine.createSpyObj('mockParentElement', ['cloneNode', 'appendChild', 'remove']);\n    var mockWindow = jasmine.createSpyObj('mockWindow', ['createObjectURL']);\n    var mockGetBlob = jasmine.createSpy('mockGetBlob');\n    var mockInlineElementStyle = jasmine.createSpy('mockInlineElementStyle');\n    var mockGetElementClone = jasmine.createSpy('mockGetElementClone');\n    var mockObjectUrl = 'mockObjectUrl';\n    var mockSvgBlob = 'mockSvgBlob';\n\n    mockParentElement.style = {};\n    mockParentElement.outerHTML = '<body>notInlinedHTML</body>';\n    mockParentElement.innerHTML = 'notInlinedHTML';\n    mockGetElementClone.and.callFake(function (element) {\n        return element;\n    });\n    mockInlineElementStyle.and.callFake(function (element) {\n        element.outerHTML = '<body>inlinedHTML</body>';\n\n        return element;\n    });\n    mockWindow.createObjectURL.and.returnValue(mockObjectUrl);\n    mockGetBlob.and.returnValue(mockSvgBlob);\n\n    var initSUT = function () {\n        return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__body_inliner__[\"a\" /* bodyInlinerFactory */])(mockInlineElementStyle, mockGetElementClone, mockGetBlob, mockWindow);\n    };\n\n    describe('getCachedSvgUrl()', function () {\n        var svgContainer = '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"100%\" height=\"100%\"><foreignObject width=\"100%\" height=\"100%\"><div xmlns=\"http://www.w3.org/1999/xhtml\">{{html}}</div></foreignObject></svg>';\n        var fillSvgContainer = function (content) {\n            return svgContainer.replace('{{html}}', content);\n        };\n        var callMethod = function () {\n            var SUT = initSUT();\n\n            SUT.getCachedSvgUrl(mockParentElement);\n\n            return SUT;\n        };\n\n        it('should be defined', function () {\n            expect(initSUT().getCachedSvgUrl).toEqual(jasmine.any(Function));\n        });\n\n        it('should call getBlob', function () {\n            var inlinedHTML = '<div>inlinedHTML</div>';\n\n            callMethod();\n\n            expect(mockGetBlob).toHaveBeenCalledWith([fillSvgContainer(inlinedHTML)], { type: 'image/svg+xml' });\n        });\n\n        it('should call createObjectURL', function () {\n            mockWindow.createObjectURL.calls.reset();\n\n            callMethod();\n\n            expect(mockWindow.createObjectURL).toHaveBeenCalledWith(mockSvgBlob);\n        });\n\n        it('should remove clone', function () {\n            mockParentElement.remove.calls.reset();\n\n            callMethod();\n\n            expect(mockParentElement.remove).toHaveBeenCalled();\n        });\n\n        it('should cache the result', function () {\n            mockInlineElementStyle.calls.reset();\n\n            var SUT = callMethod();\n\n            expect(mockInlineElementStyle).toHaveBeenCalled();\n\n            mockInlineElementStyle.calls.reset();\n\n            SUT.getCachedSvgUrl(mockParentElement);\n\n            expect(mockInlineElementStyle).not.toHaveBeenCalled();\n        });\n    });\n});\n\n/***/ }),\n/* 4 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__canvas_helpers__ = __webpack_require__(1);\n\n\ndescribe('canvas-helpers module', function () {\n    var mockCanvas = jasmine.createSpyObj('mockCanvas', ['getContext']);\n    var mockCanvasWidth = 'mockCanvasWidth';\n    var mockCanvasHeight = 'mockCanvasHeight';\n    var mockContext = {\n        fillRect: jasmine.createSpy('fillRect'),\n        drawImage: jasmine.createSpy('drawImage'),\n        clearRect: jasmine.createSpy('clearRect')\n    };\n    var mockImage = {};\n    var mockGetImage = function () {\n        return mockImage;\n    };\n    var mockCachedSvgUrl = 'mockCachedSvgUrl';\n    var mockGetCachedSvgUrl = jasmine.createSpy('mockGetCachedSvgUrl');\n    var mockCallback = jasmine.createSpy('mockCallback');\n    var mockParentElement = {\n        scrollTop: 'scrollTop',\n        clientWidth: 'clientWidth',\n        clientHeight: 'clientHeight'\n    };\n\n    mockGetCachedSvgUrl.and.returnValue(mockCachedSvgUrl);\n    mockCanvas.width = mockCanvasWidth;\n    mockCanvas.height = mockCanvasHeight;\n    mockCanvas.getContext.and.returnValue(mockContext);\n\n    var initSUT = function () {\n        return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__canvas_helpers__[\"a\" /* canvasHelpersFactory */])(mockGetImage);\n    };\n\n    describe('drawSvgToCanvasAsync()', function () {\n        it('should be defined', function () {\n            expect(initSUT().drawSvgToCanvasAsync).toEqual(jasmine.any(Function));\n        });\n\n        it('should return a promise', function () {\n            expect(initSUT().drawSvgToCanvasAsync(mockGetCachedSvgUrl, mockCanvas, mockParentElement)).toEqual(jasmine.any(Promise));\n        });\n    });\n\n    describe('drawSvgToCanvas()', function () {\n        var callMethod = function () {\n            initSUT().drawSvgToCanvas(mockGetCachedSvgUrl, mockCanvas, mockParentElement, mockCallback);\n        };\n\n        it('should call getCachedSvgUrl', function () {\n            callMethod();\n\n            expect(mockGetCachedSvgUrl).toHaveBeenCalledWith(mockParentElement);\n        });\n\n        it('should set src of the image', function () {\n            callMethod();\n\n            expect(mockImage.src).toEqual(mockCachedSvgUrl);\n        });\n\n        it('should set onload method', function () {\n            callMethod();\n\n            // WHEN\n            mockImage.onload();\n\n            // THEN\n            expect(mockContext.clearRect).toHaveBeenCalledWith(0, 0, mockCanvasWidth, mockCanvasHeight);\n            expect(mockContext.drawImage).toHaveBeenCalledWith(mockImage, 0, 0);\n            expect(mockCallback).toHaveBeenCalled();\n        });\n\n        it('should set onerror method', function () {\n            callMethod();\n\n            expect(mockImage.onerror).toThrow(new Error('Could not load image!'));\n        });\n    });\n\n    describe('drawWhereYouAtWindow()', function () {\n        it('should be defined', function () {\n            expect(initSUT().drawWhereYouAtWindow).toEqual(jasmine.any(Function));\n        });\n\n        it('should draw window on the provided canvas', function () {\n            // WHEN\n            initSUT().drawWhereYouAtWindow(mockParentElement, mockCanvas);\n\n            // THEN\n            expect(mockContext.globalCompositeOperation).toEqual('darken');\n            expect(mockContext.fillStyle).toEqual('grey');\n            expect(mockContext.fillRect).toHaveBeenCalledWith(0, mockParentElement.scrollTop, mockParentElement.clientWidth, mockParentElement.clientHeight);\n        });\n    });\n});\n\n/***/ }),\n/* 5 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__dom_helpers__ = __webpack_require__(2);\n\n\nvar mockElementStyles = {\n    property1: 'property1',\n    property2: 'property2',\n    property3: 'property3',\n    property4: 'property4'\n};\n\nvar mockStylesToInline = {\n    'background-color': 'background-color',\n    'color': 'color',\n    'margin': 'margin',\n    'padding': 'padding',\n    'dont-care': 'dont-care'\n};\n\ndescribe('dom-helpers module', function () {\n    var mockConvertNodeListToArray = function (nodeList) {\n        return nodeList;\n    };\n    var mockWindow = jasmine.createSpyObj('mockWindow', ['getComputedStyle']);\n    var mockDocument = jasmine.createSpyObj('document', ['createElement']);\n\n    mockWindow.getComputedStyle.and.returnValue({\n        getPropertyValue: function (propertyName) {\n            return mockStylesToInline[propertyName];\n        }\n    });\n    mockDocument.createElement.and.returnValue({\n        style: {}\n    });\n\n    var initSUT = function () {\n        return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__dom_helpers__[\"a\" /* domHelpersFactory */])(mockConvertNodeListToArray, mockWindow, mockDocument);\n    };\n\n    describe('addStyleToElement()', function () {\n        it('should be defined', function () {\n            expect(initSUT().addStyleToElement).toEqual(jasmine.any(Function));\n        });\n\n        it('should add styles to an element', function () {\n            var targetElement = {\n                style: {}\n            };\n\n            initSUT().addStyleToElement(targetElement, mockElementStyles);\n\n            checkElementStyles(targetElement, mockElementStyles);\n        });\n    });\n\n    describe('appendElement()', function () {\n        it('should be defined', function () {\n            expect(initSUT().appendElement).toEqual(jasmine.any(Function));\n        });\n\n        it('should append child element after applying styles', function () {\n            // GIVEN\n            var mockParentElement = {\n                appendChild: jasmine.createSpy('appendChild')\n            };\n            var mockElementStyles = {};\n\n            // WHEN\n            var appendedElement = initSUT().appendElement(mockParentElement, 'tagName', mockElementStyles);\n\n            // THEN\n            expect(mockDocument.createElement).toHaveBeenCalledWith('tagName');\n            expect(mockParentElement.appendChild).toHaveBeenCalledWith(appendedElement);\n            checkElementStyles(appendedElement, mockElementStyles);\n        });\n    });\n\n    describe('fadeInElement()', function () {\n        it('should be defined', function () {\n            expect(initSUT().fadeInElement).toEqual(jasmine.any(Function));\n        });\n\n        it('should add visibility and opacity styles', function () {\n            var targetElement = {\n                style: {}\n            };\n\n            initSUT().fadeInElement(targetElement);\n\n            expect(targetElement.style.visibility).toEqual('visible');\n            expect(targetElement.style.opacity).toEqual(1);\n        });\n    });\n\n    describe('inlineElementStyles()', function () {\n        var mockElementChild1 = {\n            tagName: '',\n            style: {},\n            children: []\n        };\n        var mockElementChild2 = {\n            tagName: '',\n            style: {},\n            children: []\n        };\n        var mockElement = {\n            tagName: '',\n            style: {},\n            children: [mockElementChild1, mockElementChild2]\n        };\n        var expectedCssText = Object.keys(mockStylesToInline).filter(function (propertyName) {\n            return propertyName !== 'dont-care';\n        }).map(function (propertyName) {\n            return propertyName + ':' + mockStylesToInline[propertyName];\n        }).join(';');\n\n        it('should add cssText to element', function () {\n            initSUT().inlineElementStyles(mockElement);\n\n            expect(mockElement.style.cssText).toEqual(expectedCssText);\n            expect(mockElement.children[0].style.cssText).toEqual(expectedCssText);\n            expect(mockElement.children[1].style.cssText).toEqual(expectedCssText);\n        });\n    });\n\n    describe('getElementClone()', function () {\n        it('should call cloneNode on element', function () {\n            var mockElement = jasmine.createSpyObj('mockElement', ['cloneNode']);\n\n            initSUT().getElementClone(mockElement);\n\n            expect(mockElement.cloneNode).toHaveBeenCalledWith(true);\n        });\n    });\n});\n\nvar checkElementStyles = function (element, styles) {\n    Object.keys(styles).forEach(function (propertyName) {\n        expect(element.style[propertyName]).toEqual(styles[propertyName]);\n    });\n};\n\n/***/ }),\n/* 6 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__lib_body_inliner_test__ = __webpack_require__(3);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_canvas_helpers_test__ = __webpack_require__(4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__lib_dom_helpers_test__ = __webpack_require__(5);\n// TESTS\n\n\n\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// specs.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 3c925c35372c4070ad2e","const bodyInlinerFactory = (inlineElementStyles, getElementClone, getBlob, window) => {\r\n    const cache = {};\r\n\r\n    const appendClone = (parentClone, parentElement) => {\r\n        parentClone.style.display = 'none';\r\n        parentElement.appendChild(parentClone);\r\n    };\r\n\r\n    const replaceBodyWithDiv = (parentClone) => {\r\n        return parentClone.outerHTML\r\n            .replace('<body', '<div')\r\n            .replace('</body', '</div');\r\n    };\r\n\r\n    const getHTML = (parentElement) => {\r\n        const parentClone = getElementClone(parentElement);\r\n\r\n        appendClone(parentClone, parentElement);    // we need to append the clone for styles to take effect\r\n        inlineElementStyles(parentClone);           // inline styles so the scroller gets them as well\r\n\r\n        const fullPageHTML = replaceBodyWithDiv(parentClone);\r\n\r\n        parentClone.remove();\r\n\r\n        return fullPageHTML;\r\n    };\r\n\r\n    const addHTMLToSvg = (inlinedHTML) => {\r\n        const svgContainer = '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"100%\" height=\"100%\"><foreignObject width=\"100%\" height=\"100%\"><div xmlns=\"http://www.w3.org/1999/xhtml\">{{html}}</div></foreignObject></svg>';\r\n\r\n        return svgContainer.replace('{{html}}', inlinedHTML);\r\n    };\r\n\r\n    const getSvgUrl = (domUrl, parentElement) => {\r\n        const inlinedHTML = getHTML(parentElement);\r\n        \r\n        const svg = getBlob([addHTMLToSvg(inlinedHTML)], { type: 'image/svg+xml' });\r\n\r\n        return domUrl.createObjectURL(svg);\r\n    };\r\n\r\n    const getCachedSvgUrl = (parentElement) => {\r\n        const domUrl = window.URL || window.webkitURL || window;\r\n\r\n        let cachedValue = cache[parentElement.innerHTML];\r\n        \r\n        if (cachedValue) {\r\n            return cachedValue;\r\n        }\r\n\r\n        const svgUrl = getSvgUrl(domUrl, parentElement);\r\n\r\n        cache[parentElement.innerHTML] = svgUrl;\r\n\r\n        return svgUrl;\r\n    };\r\n\r\n    return {\r\n        getCachedSvgUrl\r\n    };\r\n};\r\n\r\nexport {\r\n    bodyInlinerFactory\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./lib/body-inliner.js","const canvasHelpersFactory = (getImage) => {\r\n    const clearCanvas = (canvas) => {\r\n        const context = canvas.getContext('2d');\r\n\r\n        context.clearRect(0, 0, canvas.width, canvas.height);\r\n    };\r\n\r\n    const drawSvgToCanvas = (getCachedSvgUrl, canvas, parentElement, callback) => {\r\n        const image = getImage();\r\n        const svgUrl = getCachedSvgUrl(parentElement);\r\n        const context = canvas.getContext('2d');\r\n\r\n        image.onload = () => {\r\n            clearCanvas(canvas);\r\n            context.drawImage(image, 0, 0);\r\n\r\n            callback();\r\n        };\r\n\r\n        image.onerror = () => {\r\n            throw new Error('Could not load image!');\r\n        };\r\n\r\n        image.src = svgUrl;\r\n    };\r\n\r\n    const drawSvgToCanvasAsync = (getCachedSvgUrl, canvas, parentElement) => {\r\n        return new Promise(drawSvgToCanvas.bind(null, getCachedSvgUrl, canvas, parentElement));\r\n    };\r\n\r\n    const drawWhereYouAtWindow = (parentElement, canvas) => {\r\n        const context = canvas.getContext('2d');\r\n        const rectStartY = parentElement.scrollTop;\r\n        const rectWidth = parentElement.clientWidth;\r\n        const rectHeight = parentElement.clientHeight;\r\n\r\n        context.globalCompositeOperation = 'darken';\r\n        context.fillStyle = 'grey';\r\n        context.fillRect(0, rectStartY, rectWidth, rectHeight);\r\n    };\r\n\r\n    return {\r\n        drawSvgToCanvas,\r\n        drawSvgToCanvasAsync,\r\n        drawWhereYouAtWindow\r\n    };\r\n};\r\n\r\nexport {\r\n    canvasHelpersFactory\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./lib/canvas-helpers.js","const domHelpersFactory = (convertNodeListToArray, window, document) => {\r\n    const addStyleToElement = (element, styles) => {\r\n        Object.keys(styles).forEach(propertyName => {\r\n            element.style[propertyName] = styles[propertyName];\r\n        });\r\n    };\r\n\r\n    const appendElement = (parentElement, tagName, elementStyles) => {\r\n        const childElement = document.createElement(tagName);\r\n\r\n        if (elementStyles) {\r\n            addStyleToElement(childElement, elementStyles);\r\n        }\r\n\r\n        parentElement.appendChild(childElement);\r\n\r\n        return childElement;\r\n    };\r\n\r\n    const fadeInElement = (element) => {\r\n        addStyleToElement(element, {\r\n            visibility: 'visible',\r\n            opacity: 1\r\n        });\r\n    };\r\n\r\n    const visualStyleProperties = ['background-color', 'color', 'margin', 'padding'];\r\n    const notVisualTags = ['script', 'iframe', 'style'];\r\n    const isNotVisualTag = (tagName) => notVisualTags.indexOf(tagName.toLowerCase()) !== -1;\r\n\r\n    const inlineElementStyles = (element) => {\r\n        if (isNotVisualTag(element.tagName)) {\r\n            return;\r\n        }\r\n\r\n        const computedStyle = window.getComputedStyle(element);\r\n\r\n        const elementVisualStyleProperties = visualStyleProperties.map(propertyName => {\r\n            const propertyValue = computedStyle.getPropertyValue(propertyName);\r\n\r\n            return `${propertyName}:${propertyValue}`;\r\n        });\r\n\r\n        element.style.cssText = elementVisualStyleProperties.join(';');\r\n\r\n        convertNodeListToArray(element.children).forEach(inlineElementStyles);\r\n    };\r\n\r\n    const getElementClone = (element) => {\r\n        const isDeepClone = true;\r\n\r\n        return element.cloneNode(isDeepClone);\r\n    };\r\n\r\n    return {\r\n        addStyleToElement,\r\n        appendElement,\r\n        fadeInElement,\r\n        inlineElementStyles,\r\n        getElementClone\r\n    };\r\n};\r\n\r\nexport {\r\n    domHelpersFactory\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./lib/dom-helpers.js","import {\r\n    bodyInlinerFactory\r\n} from './body-inliner';\r\n\r\ndescribe('body-inliner module', () => {\r\n    const mockParentElement         = jasmine.createSpyObj('mockParentElement', ['cloneNode', 'appendChild', 'remove']);\r\n    const mockWindow                = jasmine.createSpyObj('mockWindow', ['createObjectURL']);\r\n    const mockGetBlob               = jasmine.createSpy('mockGetBlob');\r\n    const mockInlineElementStyle    = jasmine.createSpy('mockInlineElementStyle');\r\n    const mockGetElementClone       = jasmine.createSpy('mockGetElementClone');\r\n    const mockObjectUrl = 'mockObjectUrl';\r\n    const mockSvgBlob = 'mockSvgBlob';\r\n\r\n    mockParentElement.style = {};\r\n    mockParentElement.outerHTML = '<body>notInlinedHTML</body>';\r\n    mockParentElement.innerHTML = 'notInlinedHTML';\r\n    mockGetElementClone.and.callFake(element => element);\r\n    mockInlineElementStyle.and.callFake(element => {\r\n        element.outerHTML = '<body>inlinedHTML</body>';\r\n\r\n        return element;\r\n    });\r\n    mockWindow.createObjectURL.and.returnValue(mockObjectUrl);\r\n    mockGetBlob.and.returnValue(mockSvgBlob);\r\n\r\n    const initSUT = () => bodyInlinerFactory(mockInlineElementStyle, mockGetElementClone, mockGetBlob, mockWindow);\r\n\r\n    describe('getCachedSvgUrl()', () => {\r\n        const svgContainer = '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"100%\" height=\"100%\"><foreignObject width=\"100%\" height=\"100%\"><div xmlns=\"http://www.w3.org/1999/xhtml\">{{html}}</div></foreignObject></svg>';\r\n        const fillSvgContainer = (content) => svgContainer.replace('{{html}}', content);\r\n        const callMethod = () => {\r\n            const SUT = initSUT();\r\n\r\n            SUT.getCachedSvgUrl(mockParentElement);\r\n\r\n            return SUT;\r\n        };\r\n\r\n        it('should be defined', () => {\r\n            expect(initSUT().getCachedSvgUrl).toEqual(jasmine.any(Function));\r\n        });\r\n\r\n        it('should call getBlob', () => {\r\n            const inlinedHTML = '<div>inlinedHTML</div>';\r\n\r\n            callMethod();\r\n\r\n            expect(mockGetBlob).toHaveBeenCalledWith([fillSvgContainer(inlinedHTML)], { type: 'image/svg+xml' });\r\n        });\r\n\r\n        it('should call createObjectURL', () => {\r\n            mockWindow.createObjectURL.calls.reset();\r\n\r\n            callMethod();\r\n\r\n            expect(mockWindow.createObjectURL).toHaveBeenCalledWith(mockSvgBlob);\r\n        });\r\n\r\n        it('should remove clone', () => {\r\n            mockParentElement.remove.calls.reset();\r\n\r\n            callMethod();\r\n\r\n            expect(mockParentElement.remove).toHaveBeenCalled();\r\n        });\r\n\r\n        it('should cache the result', () => {\r\n            mockInlineElementStyle.calls.reset();\r\n\r\n            const SUT = callMethod();\r\n\r\n            expect(mockInlineElementStyle).toHaveBeenCalled();\r\n\r\n            mockInlineElementStyle.calls.reset();\r\n\r\n            SUT.getCachedSvgUrl(mockParentElement);\r\n\r\n            expect(mockInlineElementStyle).not.toHaveBeenCalled();\r\n        });\r\n    });\r\n});\r\n\n\n\n// WEBPACK FOOTER //\n// ./lib/body-inliner.test.js","import {\r\n    canvasHelpersFactory\r\n} from './canvas-helpers';\r\n\r\ndescribe('canvas-helpers module', () => {\r\n    const mockCanvas = jasmine.createSpyObj('mockCanvas', ['getContext']);\r\n    const mockCanvasWidth = 'mockCanvasWidth';\r\n    const mockCanvasHeight = 'mockCanvasHeight';\r\n    const mockContext = {\r\n        fillRect: jasmine.createSpy('fillRect'),\r\n        drawImage: jasmine.createSpy('drawImage'),\r\n        clearRect: jasmine.createSpy('clearRect')\r\n    };\r\n    const mockImage = {};\r\n    const mockGetImage = () => mockImage;\r\n    const mockCachedSvgUrl = 'mockCachedSvgUrl';\r\n    const mockGetCachedSvgUrl = jasmine.createSpy('mockGetCachedSvgUrl');\r\n    const mockCallback = jasmine.createSpy('mockCallback');\r\n    const mockParentElement = {\r\n        scrollTop: 'scrollTop',\r\n        clientWidth: 'clientWidth',\r\n        clientHeight: 'clientHeight',\r\n    };\r\n\r\n    mockGetCachedSvgUrl.and.returnValue(mockCachedSvgUrl);\r\n    mockCanvas.width = mockCanvasWidth;\r\n    mockCanvas.height = mockCanvasHeight;\r\n    mockCanvas.getContext.and.returnValue(mockContext);\r\n\r\n    const initSUT = () => canvasHelpersFactory(mockGetImage);\r\n\r\n    describe('drawSvgToCanvasAsync()', () => {\r\n        it('should be defined', () => {\r\n            expect(initSUT().drawSvgToCanvasAsync).toEqual(jasmine.any(Function));\r\n        });\r\n\r\n        it('should return a promise', () => {\r\n            expect(initSUT().drawSvgToCanvasAsync(mockGetCachedSvgUrl, mockCanvas, mockParentElement)).toEqual(jasmine.any(Promise));\r\n        });\r\n    });\r\n\r\n    describe('drawSvgToCanvas()', () => {\r\n        const callMethod = () => {\r\n            initSUT().drawSvgToCanvas(mockGetCachedSvgUrl, mockCanvas, mockParentElement, mockCallback);\r\n        };\r\n\r\n        it('should call getCachedSvgUrl', () => {\r\n            callMethod();\r\n\r\n            expect(mockGetCachedSvgUrl).toHaveBeenCalledWith(mockParentElement);\r\n        });\r\n\r\n        it('should set src of the image', () => {\r\n            callMethod();\r\n\r\n            expect(mockImage.src).toEqual(mockCachedSvgUrl);\r\n        });\r\n\r\n        it('should set onload method', () => {\r\n            callMethod();\r\n\r\n            // WHEN\r\n            mockImage.onload();\r\n\r\n            // THEN\r\n            expect(mockContext.clearRect).toHaveBeenCalledWith(0, 0, mockCanvasWidth, mockCanvasHeight);\r\n            expect(mockContext.drawImage).toHaveBeenCalledWith(mockImage, 0, 0);\r\n            expect(mockCallback).toHaveBeenCalled();\r\n        });\r\n\r\n        it('should set onerror method', () => {\r\n            callMethod();\r\n\r\n            expect(mockImage.onerror).toThrow(new Error('Could not load image!'));\r\n        });\r\n    });\r\n\r\n    describe('drawWhereYouAtWindow()', () => {\r\n        it('should be defined', () => {\r\n            expect(initSUT().drawWhereYouAtWindow).toEqual(jasmine.any(Function));\r\n        });\r\n\r\n        it('should draw window on the provided canvas', () => {\r\n            // WHEN\r\n            initSUT().drawWhereYouAtWindow(mockParentElement, mockCanvas);\r\n\r\n            // THEN\r\n            expect(mockContext.globalCompositeOperation).toEqual('darken');\r\n            expect(mockContext.fillStyle).toEqual('grey');\r\n            expect(mockContext.fillRect).toHaveBeenCalledWith(\r\n                0,\r\n                mockParentElement.scrollTop,\r\n                mockParentElement.clientWidth,\r\n                mockParentElement.clientHeight\r\n            );\r\n        });\r\n    });\r\n});\r\n\n\n\n// WEBPACK FOOTER //\n// ./lib/canvas-helpers.test.js","import {\r\n    domHelpersFactory\r\n} from './dom-helpers';\r\n\r\nconst mockElementStyles = {\r\n    property1: 'property1',\r\n    property2: 'property2',\r\n    property3: 'property3',\r\n    property4: 'property4'\r\n};\r\n\r\nconst mockStylesToInline = {\r\n    'background-color': 'background-color',\r\n    'color': 'color',\r\n    'margin': 'margin',\r\n    'padding': 'padding',\r\n    'dont-care': 'dont-care'\r\n};\r\n\r\ndescribe('dom-helpers module', () => {\r\n    const mockConvertNodeListToArray = (nodeList) => nodeList;\r\n    const mockWindow = jasmine.createSpyObj('mockWindow', ['getComputedStyle']);\r\n    const mockDocument = jasmine.createSpyObj('document', ['createElement']);\r\n\r\n    mockWindow.getComputedStyle.and.returnValue({\r\n        getPropertyValue: (propertyName) => mockStylesToInline[propertyName]\r\n    });\r\n    mockDocument.createElement.and.returnValue({\r\n        style: {}\r\n    });\r\n\r\n    const initSUT = () => domHelpersFactory(mockConvertNodeListToArray, mockWindow, mockDocument);\r\n\r\n    describe('addStyleToElement()', () => {\r\n        it('should be defined', () => {\r\n            expect(initSUT().addStyleToElement).toEqual(jasmine.any(Function));\r\n        });\r\n\r\n        it('should add styles to an element', () => {\r\n            let targetElement = {\r\n                style: {}\r\n            };\r\n\r\n            initSUT().addStyleToElement(targetElement, mockElementStyles);\r\n\r\n            checkElementStyles(targetElement, mockElementStyles);\r\n        });\r\n    });\r\n\r\n    describe('appendElement()', () => {\r\n        it('should be defined', () => {\r\n            expect(initSUT().appendElement).toEqual(jasmine.any(Function));\r\n        });\r\n\r\n        it('should append child element after applying styles', () => {\r\n            // GIVEN\r\n            const mockParentElement = {\r\n                appendChild: jasmine.createSpy('appendChild')\r\n            };\r\n            const mockElementStyles = {};\r\n\r\n            // WHEN\r\n            const appendedElement = initSUT().appendElement(mockParentElement, 'tagName', mockElementStyles);\r\n\r\n            // THEN\r\n            expect(mockDocument.createElement).toHaveBeenCalledWith('tagName');\r\n            expect(mockParentElement.appendChild).toHaveBeenCalledWith(appendedElement);\r\n            checkElementStyles(appendedElement, mockElementStyles);\r\n        });\r\n    });\r\n\r\n    describe('fadeInElement()', () => {\r\n        it('should be defined', () => {\r\n            expect(initSUT().fadeInElement).toEqual(jasmine.any(Function));\r\n        });\r\n\r\n        it('should add visibility and opacity styles', () => {\r\n            let targetElement = {\r\n                style: {}\r\n            };\r\n\r\n            initSUT().fadeInElement(targetElement);\r\n\r\n            expect(targetElement.style.visibility).toEqual('visible');\r\n            expect(targetElement.style.opacity).toEqual(1);\r\n        });\r\n    });\r\n\r\n    describe('inlineElementStyles()', () => {\r\n        const mockElementChild1 = {\r\n            tagName: '',\r\n            style: {},\r\n            children: []\r\n        };\r\n        const mockElementChild2 = {\r\n            tagName: '',\r\n            style: {},\r\n            children: []\r\n        };\r\n        const mockElement = {\r\n            tagName: '',\r\n            style: {},\r\n            children: [mockElementChild1, mockElementChild2]\r\n        };\r\n        const expectedCssText = Object.keys(mockStylesToInline)\r\n            .filter(propertyName => propertyName !== 'dont-care')\r\n            .map(propertyName => `${propertyName}:${mockStylesToInline[propertyName]}`)\r\n            .join(';');\r\n\r\n        it('should add cssText to element', () => {\r\n            initSUT().inlineElementStyles(mockElement);\r\n\r\n            expect(mockElement.style.cssText).toEqual(expectedCssText);\r\n            expect(mockElement.children[0].style.cssText).toEqual(expectedCssText);\r\n            expect(mockElement.children[1].style.cssText).toEqual(expectedCssText);\r\n        });\r\n    });\r\n\r\n    describe('getElementClone()', () => {\r\n        it('should call cloneNode on element', () => {\r\n            const mockElement = jasmine.createSpyObj('mockElement', ['cloneNode']);\r\n\r\n            initSUT().getElementClone(mockElement);\r\n\r\n            expect(mockElement.cloneNode).toHaveBeenCalledWith(true);\r\n        });\r\n    });\r\n});\r\n\r\nconst checkElementStyles = (element, styles) => {\r\n    Object.keys(styles).forEach(propertyName => {\r\n        expect(element.style[propertyName]).toEqual(styles[propertyName]);\r\n    });\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./lib/dom-helpers.test.js","// TESTS\r\nimport './lib/body-inliner.test';\r\nimport './lib/canvas-helpers.test';\r\nimport './lib/dom-helpers.test';\r\n\n\n\n// WEBPACK FOOTER //\n// ./specs.js"],"sourceRoot":""}